"use strict";function _instanceof(e,t){return null!=t&&"undefined"!=typeof Symbol&&t[Symbol.hasInstance]?!!t[Symbol.hasInstance](e):e instanceof t}function _classCallCheck(e,t){if(!_instanceof(e,t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Castjs=function e(){var a=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(_classCallCheck(this,e),_defineProperty(this,"scanner",function(){if(!window.chrome)return console.warn("Castjs: Casting is not supported in this browser");var e=setInterval(function(){window.chrome.cast&&window.chrome.cast.isAvailable&&(clearInterval(e),a.init())},250)}),_defineProperty(this,"init",function(){cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:a.receiver,autoJoinPolicy:a.joinpolicy}),a.player=new cast.framework.RemotePlayer,a.controller=new cast.framework.RemotePlayerController(a.player),a.controller.addEventListener("isConnectedChanged",a.isConnectedChanged),a.controller.addEventListener("currentTimeChanged",a.currentTimeChanged),a.controller.addEventListener("durationChanged",a.durationChanged),a.controller.addEventListener("volumeLevelChanged",a.volumeLevelChanged),a.controller.addEventListener("isMutedChanged",a.isMutedChanged),a.controller.addEventListener("isPausedChanged",a.isPausedChanged),a.controller.addEventListener("playerStateChanged",a.playerStateChanged),a.available=!0,a.trigger("available")}),_defineProperty(this,"isConnectedChanged",function(){setTimeout(function(){if(a.connected=a.player.isConnected,a.connected&&(a.trigger("connected"),a.player.isMediaLoaded)){for(var e in a.media={src:a.player.mediaInfo.contentId,poster:a.player.imageUrl||null,title:a.player.title||null,description:a.player.mediaInfo.metadata.subtitle||null,subtitles:[],progress:a.controller.getSeekPosition(a.player.currentTime,a.player.duration),time:a.controller.getFormattedTime(a.player.currentTime),duration:a.controller.getFormattedTime(a.player.duration),volume:a.player.volumeLevel,muted:a.player.isMuted,paused:a.player.isPaused,state:a.player.playerState.toLowerCase()},a.player.mediaInfo.tracks)"TEXT"===a.player.mediaInfo.tracks[e].type&&a.media.subtitles.push({label:a.player.mediaInfo.tracks[e].name,src:a.player.mediaInfo.tracks[e].trackContentId});var t=cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].activeTrackIds;t.length&&a.media.subtitles[t[0]]&&(a.media.subtitles[t[0]].active=!0),a.trigger("session",a.media)}})}),_defineProperty(this,"currentTimeChanged",function(){a.media.progress=a.controller.getSeekPosition(a.player.currentTime,a.player.duration),a.media.time=a.controller.getFormattedTime(a.player.currentTime),a.media.duration=a.controller.getFormattedTime(a.player.duration),a.trigger("time",{progress:a.media.progress,time:a.media.time,duration:a.media.duration}),100<=a.media.progress&&(a.trigger("end"),a.disconnect())}),_defineProperty(this,"durationChanged",function(){a.media.duration=a.player.duration}),_defineProperty(this,"volumeLevelChanged",function(){a.media.volume=a.player.volumeLevel,a.trigger("volume",a.media.volume)}),_defineProperty(this,"isMutedChanged",function(){a.media.muted=a.player.isMuted,a.trigger("muted",a.media.muted)}),_defineProperty(this,"isPausedChanged",function(){a.media.paused=a.player.isPaused,a.trigger("pause",a.media.paused)}),_defineProperty(this,"playerStateChanged",function(){a.media.state=a.player.playerState.toLowerCase(),"idle"===a.media.state&&(a.media.state="disconnected"),a.trigger("state",a.media.state)}),_defineProperty(this,"on",function(e,t){a.events[e]||(a.events[e]=[]),a.events[e].push(t)}),_defineProperty(this,"off",function(e,t){if(!e)return a.events={};if(a.events[e]){if(void 0===t||"*"===t)return a.events[e]=[];for(var r in a.events[e])if(a.events[e][r]===t){a.events[e].splice(r,1);break}}}),_defineProperty(this,"trigger",function(e,t){for(var r in a.events[e])a.events[e][r](t)}),_defineProperty(this,"cast",function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(!e)return a.trigger("error","No media source specified.");for(var r in t.source=e,t)t.hasOwnProperty(r)&&(a.media[r]=t[r]);cast.framework.CastContext.getInstance().requestSession().then(function(){if(!cast.framework.CastContext.getInstance().getCurrentSession())return a.trigger("error","Could not connect with the cast device");var e=new chrome.cast.media.MediaInfo(a.media.source);if(e.metadata=new chrome.cast.media.GenericMediaMetadata,a.media.subtitles.length){e.textTrackStyle=new chrome.cast.media.TextTrackStyle,e.textTrackStyle.fontFamily="Arial",e.textTrackStyle.foregroundColor="#FFFFFF",e.textTrackStyle.backgroundColor="#00000000",e.textTrackStyle.fontScale="1.1",e.textTrackStyle.edgeColor="#00000099",e.textTrackStyle.edgeType="DROP_SHADOW";var t=[];for(var r in a.media.subtitles){var n=new chrome.cast.media.Track(r,"TEXT");n.trackContentId=a.media.subtitles[r].src,n.trackContentType="text/vtt",n.subtype="CAPTIONS",n.name=a.media.subtitles[r].label,t.push(n)}e.tracks=t}e.metadata.images=[{url:a.media.poster}],e.metadata.title=a.media.title,e.metadata.subtitle=a.media.description;var i=new chrome.cast.media.LoadRequest(e);if(i.currentTime=a.media.time,i.autoplay=!a.media.paused,a.media.subtitles.length)for(var r in a.media.subtitles)if(a.media.subtitles[r].active){i.activeTrackIds=[r];break}cast.framework.CastContext.getInstance().getCurrentSession().loadMedia(i).then(function(){a.trigger("connected"),a.trigger("session",a.media)},function(e){a.trigger("error",e)})},function(e){a.trigger("error",e)})}),_defineProperty(this,"seek",function(e){a.player.currentTime=a.controller.getSeekTime(e,a.player.duration),a.controller.seek()}),_defineProperty(this,"volume",function(e){a.player.volumeLevel=e,a.controller.setVolumeLevel()}),_defineProperty(this,"play",function(){a.media.paused&&a.controller.playOrPause()}),_defineProperty(this,"pause",function(){a.media.paused||a.controller.playOrPause()}),_defineProperty(this,"mute",function(e){!0===e&&!1===a.media.muted?a.controller.muteOrUnmute():!1===e&&!0===a.media.muted&&a.controller.muteOrUnmute()}),_defineProperty(this,"subtitle",function(e){var t=new chrome.cast.media.EditTracksInfoRequest([e]);for(var r in cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].editTracksInfo(t,null,null),a.media.subtitles)delete a.media.subtitles[r].active,r===e&&(a.media.subtitles[r].active=!0)}),_defineProperty(this,"disconnect",function(){cast.framework.CastContext.getInstance().endCurrentSession(!0),a.controller.stop(),a.media=Object.assign({},self.template),a.connected=!1,a.media.state="disconnected",a.trigger("disconnected")}),!_instanceof(this,e))return console.warn("Castjs: don't invoke Castjs without 'new'"),new e(t);this.receiver=t.receiver||"CC1AD845",this.joinpolicy=t.joinpolicy||"origin_scoped",this.available=!1,this.connected=!1,this.player=null,this.controller=null,this.events={},self.template={source:null,poster:null,title:null,description:null,subtitles:[],progress:0,time:0,duration:0,volume:.3,muted:!1,paused:!1,state:"disconnected"},this.media=Object.assign({},self.template),this.scanner()};
