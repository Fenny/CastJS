function CastJS(e={}){if(!(this instanceof CastJS))return console.warn("don't invoke CastJS without 'new'"),new CastJS(e);var t=this;if(t.receiver=e.receiver||"CC1AD845",t.joinpolicy=e.joinpolicy||"origin_scoped",t.events=[],t.available=!1,t.connected=!1,t.player=null,t.controller=null,t.session=null,t.media=null,t.template={src:null,poster:null,title:null,description:null,subtitles:[],progress:0,time:0,duration:0,volume:30,muted:!1,paused:!1},t.media=Object.assign({},t.template),t.state="DISCONNECTED",window.chrome)var a=setInterval(function(){window.chrome.cast&&window.chrome.cast.isAvailable&&(clearInterval(a),cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:t.receiver,autoJoinPolicy:t.joinpolicy}),t.player=new cast.framework.RemotePlayer,t.controller=new cast.framework.RemotePlayerController(t.player),t.controller.addEventListener("isConnectedChanged",i),t.controller.addEventListener("currentTimeChanged",n),t.controller.addEventListener("durationChanged",o),t.controller.addEventListener("volumeLevelChanged",s),t.controller.addEventListener("isMutedChanged",l),t.controller.addEventListener("isPausedChanged",d),t.controller.addEventListener("playerStateChanged",c),t.available=!0,r("available"))},250);function r(e,a){t.events[e]&&t.events[e](a)}function i(){setTimeout(function(){if(!t.player.isConnected)return t.connected=!1;if(t.connected=!0,r("connected"),t.player.isMediaLoaded&&t.player.playerState){t.media={src:t.player.mediaInfo.contentId,poster:t.player.imageUrl||null,title:t.player.title||null,description:t.player.mediaInfo.metadata.subtitle||null,subtitles:[],progress:t.controller.getSeekPosition(t.player.currentTime,t.player.duration),time:t.controller.getFormattedTime(t.player.currentTime),duration:t.controller.getFormattedTime(t.player.duration),volume:t.player.volumeLevel,muted:t.player.isMuted,state:t.player.playerState};for(var e=0;e<t.player.mediaInfo.tracks.length;e++)"TEXT"===t.player.mediaInfo.tracks[e].type&&t.media.subtitles.push({label:t.player.mediaInfo.tracks[e].name,src:t.player.mediaInfo.tracks[e].trackContentId});var a=cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].activeTrackIds[0];void 0!==a&&t.media.subtitles[a]&&(t.media.subtitles[a].active=!0),r("media",t.media)}},0)}function n(){t.media.progress=t.controller.getSeekPosition(t.player.currentTime,t.player.duration),t.media.time=t.controller.getFormattedTime(t.player.currentTime),t.media.duration=t.controller.getFormattedTime(t.player.duration),r("time",{progress:t.media.progress,time:t.media.time,duration:t.media.duration}),t.media.progress>=100&&(r("ended"),t.disconnect())}function o(){t.media.duration=t.player.duration}function s(){t.media.volume=Math.round(100*t.player.volumeLevel),r("volume",t.media.volume)}function l(){t.media.muted=t.player.isMuted,r("muted",t.media.muted)}function d(){t.media.paused=t.player.isPaused,r("paused",t.media.paused)}function c(){if(!t.player.playerState)return t.disconnect();t.media.state="IDLE"===t.player.playerState?"DISCONNECTED":t.player.playerState,r("state",t.media.state)}CastJS.prototype.on=function(e,a){t.events[e]=a},CastJS.prototype.off=function(e){delete t.events[e]},CastJS.prototype.cast=function(e,a={}){if(!e)return r("error","No media source specified.");for(var i in a.src=e,a)a.hasOwnProperty(i)&&(t.media[i]=a[i]);cast.framework.CastContext.getInstance().requestSession().then(function(){if(t.session=cast.framework.CastContext.getInstance().getCurrentSession(),t.session&&t.media.src){var e=new chrome.cast.media.MediaInfo(t.media.src);if(e.metadata=new chrome.cast.media.GenericMediaMetadata,t.media.subtitles.length){e.textTrackStyle=new chrome.cast.media.TextTrackStyle,e.textTrackStyle.fontFamily="Arial",e.textTrackStyle.foregroundColor="#FFFFFF",e.textTrackStyle.backgroundColor="#00000000",e.textTrackStyle.fontScale="1.1",e.textTrackStyle.edgeColor="#00000099",e.textTrackStyle.edgeType=chrome.cast.media.TextTrackEdgeType.DROP_SHADOW;for(var a=[],i=0;i<t.media.subtitles.length;i++){var n=new chrome.cast.media.Track(i,chrome.cast.media.TrackType.TEXT);n.trackContentId=t.media.subtitles[i].src,n.trackContentType="text/vtt",n.subtype=chrome.cast.media.TextTrackType.CAPTIONS,n.name=t.media.subtitles[i].label,a.push(n)}e.tracks=a}t.media.poster&&(e.metadata.images=[{url:t.media.poster}]),t.media.title&&(e.metadata.title=t.media.title),t.media.description&&(e.metadata.subtitle=t.media.description),console.log(e);var o=new chrome.cast.media.LoadRequest(e);if(o.currentTime=t.media.time,o.autoplay=!t.media.paused,t.media.subtitles.length>0)for(i=0;i<t.media.subtitles.length;i++)t.media.subtitles[i]&&t.media.subtitles[i].active&&(o.activeTrackIds=[i]);t.session.loadMedia(o).then(function(){r("media",t.media)},function(e){r("error","Cast error: "+e)})}},function(e){r("error","Cast error: "+e)})},CastJS.prototype.state=function(){return t.media.state},CastJS.prototype.media=function(){return t.media},CastJS.prototype.time=function(e){return{progress:t.media.progress,time:t.media.time,duration:t.media.duration}},CastJS.prototype.seek=function(e){t.player.currentTime=t.controller.getSeekTime(e,t.player.duration),t.controller.seek()},CastJS.prototype.volume=function(e){if(void 0===e)return Math.round(100*t.player.volumeLevel);t.player.volumeLevel=e/100,t.controller.setVolumeLevel()},CastJS.prototype.play=function(){t.player.isPaused&&t.controller.playOrPause()},CastJS.prototype.pause=function(){t.player.isPaused||t.controller.playOrPause()},CastJS.prototype.paused=function(){return t.player.isPaused},CastJS.prototype.muted=function(e){if(void 0===e)return t.player.isMuted;e&&!t.player.isMuted?t.controller.muteOrUnmute():!e&&t.player.isMuted&&t.controller.muteOrUnmute()},CastJS.prototype.subtitles=function(e){if(void 0===e)return t.media.subtitles;var a=new chrome.cast.media.EditTracksInfoRequest([e]);cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].editTracksInfo(a,null,null);for(var r=0;r<t.media.subtitles.length;r++)delete t.media.subtitles[r].active,r===e&&(t.media.subtitles[r].active=!0)},CastJS.prototype.disconnect=function(){cast.framework.CastContext.getInstance().endCurrentSession(!0),t.controller.stop(),t.media=Object.assign({},t.template),t.player.isMediaLoaded=!1,t.media.state="DISCONNECTED",r("disconnected")}}
