var ChromecastJS=function(e,t){if(void 0===window.chrome.cast){var a=document.createElement("script");a.src="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1",document.body.appendChild(a)}var r=this;r.Scope=e||"tab_and_origin_scoped",r.Receiver=t||"CC1AD845",r.Events=[],r.Available=!1,r.Connected=!1,r.Player=null,r.Controller=null,r.Session=null,r.Template={content:null,poster:null,title:null,description:null,subtitles:[],time:0,duration:0,volume:.3,muted:!1,paused:!1,state:"DISCONNECTED"},r.Media=r.Template,ChromecastJS.prototype.on=function(e,t){return r.Events[e]=t,r},ChromecastJS.prototype.cast=function(e,t){if(!e.content)return void 0!==r.Events.error&&r.Events.error("No media content specified."),void(t&&t("No media content specified."));for(var a in e)e.hasOwnProperty(a)&&(r.Media[a]=e[a]);cast.framework.CastContext.getInstance().requestSession().then(function(){t&&t(null)},function(e){t&&t(e),void 0!==r.Events.error&&r.Events.error("ChromecastJS.cast():",e)})},ChromecastJS.prototype.seek=function(e){r.Connected&&r.Player.canSeek?(r.Player.currentTime=r.Controller.getSeekTime(e,r.Player.duration),r.Controller.seek()):void 0!==r.Events.error&&r.Events.error("ChromecastJS.seek(): Not connected or can't seek")},ChromecastJS.prototype.volume=function(e){r.Connected&&r.Player.canControlVolume?(e="100"==(e=1===e.toString().length?"0"+e:e)?1:parseFloat("0."+e),r.Player.volumeLevel=e,r.Controller.setVolumeLevel()):void 0!==r.Events.error&&r.Events.error("ChromecastJS.volume(): Not connected or can't control volume")},ChromecastJS.prototype.playOrPause=function(){r.Connected&&r.Player.canPause?r.Controller.playOrPause():void 0!==r.Events.error&&r.Events.error("ChromecastJS.playOrPause(): Not connected or can't pause or play")},ChromecastJS.prototype.muteOrUnmute=function(){r.Connected&&r.Player.canControlVolume?r.Controller.muteOrUnmute():void 0!==r.Events.error&&r.Events.error("ChromecastJS.muteOrUnmute(): Not connected or can't control volume")},ChromecastJS.prototype.changeSubtitle=function(e){if(r.Connected){var t=new chrome.cast.media.EditTracksInfoRequest([e]);cast.framework.CastContext.getInstance().b.getSessionObj().media[0].editTracksInfo(t,null,null)}else void 0!==r.Events.error&&r.Events.error("ChromecastJS.changeSubtitle(): Not connected")},ChromecastJS.prototype.disconnect=function(){cast.framework.CastContext.getInstance().endCurrentSession()};var n=setInterval(function(){void 0!==window.chrome&&void 0!==window.chrome.cast&&window.chrome.cast.isAvailable&&(clearInterval(n),cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:r.Receiver,autoJoinPolicy:r.Scope}),r.Player=new cast.framework.RemotePlayer,r.Controller=new cast.framework.RemotePlayerController(r.Player),r.Controller.addEventListener("isConnectedChanged",o),r.Controller.addEventListener("currentTimeChanged",i),r.Controller.addEventListener("durationChanged",i),r.Controller.addEventListener("volumeLevelChanged",s),r.Controller.addEventListener("isMutedChanged",l),r.Controller.addEventListener("isPausedChanged",d),r.Controller.addEventListener("playerStateChanged",c),r.Available=!0,void 0!==r.Events.available&&r.Events.available())},250);function o(){setTimeout(function(){if(r.Player.isConnected)if(r.Connected=!0,void 0!==r.Events.connected&&r.Events.connected(),r.Player.isMediaLoaded&&r.Player.playerState){r.Media={content:r.Player.mediaInfo.contentId,poster:r.Player.imageUrl||null,title:r.Player.title||null,description:r.Player.mediaInfo.metadata.subtitle||null,subtitles:[],time:r.Player.currentTime,duration:r.Player.duration,volume:r.Player.volumeLevel,muted:r.Player.isMuted,state:r.Player.playerState};for(var e=0;e<r.Player.mediaInfo.tracks.length;e++)"TEXT"===r.Player.mediaInfo.tracks[e].type&&r.Media.subtitles.push({label:r.Player.mediaInfo.tracks[e].name,srclang:r.Player.mediaInfo.tracks[e].language,src:r.Player.mediaInfo.tracks[e].trackContentId});void 0!==r.Events.media&&r.Events.media(r.Media)}else if(r.Session=cast.framework.CastContext.getInstance().getCurrentSession(),r.Session&&r.Media.content){var t=new chrome.cast.media.MediaInfo(r.Media.content);if(t.metadata=new chrome.cast.media.GenericMediaMetadata,r.Media.subtitles.length>0){t.textTrackStyle=new chrome.cast.media.TextTrackStyle,t.textTrackStyle.fontFamily="Arial",t.textTrackStyle.foregroundColor="#FFFFFF",t.textTrackStyle.backgroundColor="#00000000",t.textTrackStyle.fontScale="1.1",t.textTrackStyle.edgeColor="#00000099",t.textTrackStyle.edgeType=chrome.cast.media.TextTrackEdgeType.DROP_SHADOW;var a=[];for(e=0;e<r.Media.subtitles.length;e++){var n=new chrome.cast.media.Track(e,chrome.cast.media.TrackType.TEXT);n.trackContentId=r.Media.subtitles[e].src,n.trackContentType="text/vtt",n.subtype=chrome.cast.media.TextTrackType.CAPTIONS,n.name=r.Media.subtitles[e].label,n.language=r.Media.subtitles[e].srclang,a.push(n)}t.tracks=a}r.Media.poster&&(t.metadata.images=[{url:r.Media.poster}]),r.Media.title&&(t.metadata.title=r.Media.title),r.Media.description&&(t.metadata.subtitle=r.Media.description);var o=new chrome.cast.media.LoadRequest(t);if(o.currentTime=r.Media.time,o.autoplay=!r.Media.paused,r.Media.subtitles.length>0)for(e=0;e<r.Media.subtitles.length;e++)void 0!==r.Media.subtitles[e].active&&r.Media.subtitles[e].active&&(o.activeTrackIds=[e]);r.Session.loadMedia(o).then(function(){void 0!==r.Events.media&&r.Events.media(r.Media)},function(e){void 0!==r.Events.error&&r.Events.error("ChromecastJS.cast():",e)})}},0)}function i(){r.Media.time=r.Player.currentTime,void 0!==r.Events.time&&r.Events.time({progress:r.Controller.getSeekPosition(r.Player.currentTime,r.Player.duration)||0,time:r.Controller.getFormattedTime(r.Player.currentTime),duration:r.Controller.getFormattedTime(r.Player.duration)})}function s(){if(r.Media.volume=r.Player.volumeLevel,void 0!==r.Events.volume){var e="1"==r.Media.volume?"100":r.Media.volume.toFixed(2).replace("0.","").replace(".","");r.Events.volume(e)}}function l(){r.Media.muted=r.Player.isMuted,void 0!==r.Events.muteOrUnmute&&r.Events.muteOrUnmute(r.Media.muted)}function d(){r.Media.paused=r.Player.isPaused,void 0!==r.Events.playOrPause&&r.Events.playOrPause(r.Media.paused)}function c(){r.Player.playerState?r.Media.state=r.Player.playerState:(cast.framework.CastContext.getInstance().endCurrentSession(),r.Media=r.Template,r.Player.isMediaLoaded=!1,r.Media.state="DISCONNECTED",void 0!==r.Events.disconnect&&r.Events.disconnect()),void 0!==r.Events.state&&r.Events.state(r.Media.state)}};
