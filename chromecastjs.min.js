var ChromecastJS=function(e,t){if(void 0===window.chrome&&void 0===window.chrome.cast){var a=document.createElement("script");a.src="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1",document.body.appendChild(a)}var r=this;r.Scope=e||"tab_and_origin_scoped",r.Receiver=t||"CC1AD845",r.Events=[],r.Available=!1,r.Connected=!1,r.Player=null,r.Controller=null,r.Session=null,r.Template={content:null,poster:null,title:null,description:null,subtitles:[],time:0,duration:0,volume:.3,muted:!1,paused:!1,state:"DISCONNECTED"},r.Media=r.Template,ChromecastJS.prototype.on=function(e,t){r.Events[e]=t},ChromecastJS.prototype.cast=function(e,t){if(!e.content)return t&&t("No media content specified."),o("error","No media content specified.");for(var a in e)e.hasOwnProperty(a)&&(r.Media[a]=e[a]);cast.framework.CastContext.getInstance().requestSession().then(function(){t&&t(null)},function(e){t&&t(e),o("error","ChromecastJS.cast(): "+e)})},ChromecastJS.prototype.seek=function(e){if(!r.Connected||!r.Player.canSeek)return o("error",".seek(): Not connected or can't seek");r.Player.currentTime=r.Controller.getSeekTime(e,r.Player.duration),r.Controller.seek()},ChromecastJS.prototype.volume=function(e){if(!r.Connected||!r.Player.canControlVolume)return o("error",".volume(): Not connected or can't control volume");r.Player.volumeLevel=e/100,r.Controller.setVolumeLevel()},ChromecastJS.prototype.playOrPause=function(){if(!r.Connected||!r.Player.canPause)return o("error",".playOrPause(): Not connected or can't pause or play");r.Controller.playOrPause()},ChromecastJS.prototype.muteOrUnmute=function(){if(!r.Connected||!r.Player.canControlVolume)return o("error",".muteOrUnmute(): Not connected or can't control volume");r.Controller.muteOrUnmute()},ChromecastJS.prototype.changeSubtitle=function(e){if(!r.Connected)return o("error",".changeSubtitle(): Not connected");var t=new chrome.cast.media.EditTracksInfoRequest([e]);cast.framework.CastContext.getInstance().b.getSessionObj().media[0].editTracksInfo(t,null,null);for(var a=0;a<r.Media.subtitles.length;a++)r.Media.subtitles[a].active=!1,a===e&&(r.Media.subtitles[a].active=!0)},ChromecastJS.prototype.disconnect=function(){cast.framework.CastContext.getInstance().endCurrentSession()};var n=setInterval(function(){void 0!==window.chrome&&void 0!==window.chrome.cast&&window.chrome.cast.isAvailable&&(clearInterval(n),cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:r.Receiver,autoJoinPolicy:r.Scope}),r.Player=new cast.framework.RemotePlayer,r.Controller=new cast.framework.RemotePlayerController(r.Player),r.Controller.addEventListener("isConnectedChanged",i),r.Controller.addEventListener("currentTimeChanged",function(){r.Media.time=r.Player.currentTime,o("time",{progress:r.Controller.getSeekPosition(r.Player.currentTime,r.Player.duration)||0,time:r.Controller.getFormattedTime(r.Player.currentTime),duration:r.Controller.getFormattedTime(r.Player.duration)})}),r.Controller.addEventListener("durationChanged",function(){r.Media.duration=r.Player.duration}),r.Controller.addEventListener("volumeLevelChanged",function(){r.Media.volume=100*r.Player.volumeLevel,o("volume",r.Media.volume)}),r.Controller.addEventListener("isMutedChanged",function(){console.log(r.Player.isMuted),r.Media.muted=r.Player.isMuted,o("muteOrUnmute",r.Media.muted)}),r.Controller.addEventListener("isPausedChanged",function(){r.Media.paused=r.Player.isPaused,o("playOrPause",r.Media.paused)}),r.Controller.addEventListener("playerStateChanged",function(){r.Player.playerState?r.Media.state=r.Player.playerState:(cast.framework.CastContext.getInstance().endCurrentSession(),r.Controller.stop(),r.Media=r.Template,r.Player.isMediaLoaded=!1,r.Media.state="DISCONNECTED",o("disconnect")),o("state",r.Media.state)}),r.Available=!0,o("available"))},250);function o(e,t){if(void 0!==r.Events[e]){if(void 0!==t)return r.Events[e](t);r.Events[e]()}}function i(){setTimeout(function(){if(r.Player.isConnected){if(r.Connected=!0,o("connected"),r.Player.isMediaLoaded&&r.Player.playerState){r.Media={content:r.Player.mediaInfo.contentId,poster:r.Player.imageUrl||null,title:r.Player.title||null,description:r.Player.mediaInfo.metadata.subtitle||null,subtitles:[],time:r.Player.currentTime,duration:r.Player.duration,volume:r.Player.volumeLevel,muted:r.Player.isMuted,state:r.Player.playerState};for(var e=0;e<r.Player.mediaInfo.tracks.length;e++)"TEXT"===r.Player.mediaInfo.tracks[e].type&&r.Media.subtitles.push({active:!1,label:r.Player.mediaInfo.tracks[e].name,srclang:r.Player.mediaInfo.tracks[e].language,src:r.Player.mediaInfo.tracks[e].trackContentId});var t=cast.framework.CastContext.getInstance().b.getSessionObj().media[0].activeTrackIds[0];t&&void 0!==r.Media.subtitles[t]&&(r.Media.subtitles[t].active=!0),o("media",r.Media)}else if(r.Session=cast.framework.CastContext.getInstance().getCurrentSession(),r.Session&&r.Media.content){var a=new chrome.cast.media.MediaInfo(r.Media.content);if(a.metadata=new chrome.cast.media.GenericMediaMetadata,r.Media.subtitles.length>0){a.textTrackStyle=new chrome.cast.media.TextTrackStyle,a.textTrackStyle.fontFamily="Arial",a.textTrackStyle.foregroundColor="#FFFFFF",a.textTrackStyle.backgroundColor="#00000000",a.textTrackStyle.fontScale="1.1",a.textTrackStyle.edgeColor="#00000099",a.textTrackStyle.edgeType=chrome.cast.media.TextTrackEdgeType.DROP_SHADOW;var n=[];for(e=0;e<r.Media.subtitles.length;e++){var i=new chrome.cast.media.Track(e,chrome.cast.media.TrackType.TEXT);i.trackContentId=r.Media.subtitles[e].src,i.trackContentType="text/vtt",i.subtype=chrome.cast.media.TextTrackType.CAPTIONS,i.name=r.Media.subtitles[e].label,i.language=r.Media.subtitles[e].srclang,n.push(i)}a.tracks=n}r.Media.poster&&(a.metadata.images=[{url:r.Media.poster}]),r.Media.title&&(a.metadata.title=r.Media.title),r.Media.description&&(a.metadata.subtitle=r.Media.description);var l=new chrome.cast.media.LoadRequest(a);if(l.currentTime=r.Media.time,l.autoplay=!r.Media.paused,r.Media.subtitles.length>0)for(e=0;e<r.Media.subtitles.length;e++)void 0!==r.Media.subtitles[e].active&&r.Media.subtitles[e].active&&(l.activeTrackIds=[e]);r.Session.loadMedia(l).then(function(){o("media",r.Media)},function(e){o("error","ChromecastJS.cast():")})}}else r.Connected=!1},0)}};
